{"ast":null,"code":"import _slicedToArray from\"C:/Projects/StrangersThings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"C:/Projects/StrangersThings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Projects/StrangersThings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect,useState}from'react';import{Link,Route}from'react-router-dom';import{callApi}from'../api';import{Register}from'./';import Post from'./Post';import Posts from'./Posts';import CreatePost from'./CreatePost';import EditPost from'./EditPost';import MessageForm from'./MessageForm';/*\r\nRoutes:\r\n/ - home\r\n/register - register\r\n/login - login\r\n/posts - all posts\r\n    /posts/{id} - single post \r\nPlan:\r\n- fetch all posts\r\n- set up route for displaying all posts\r\n- write a component to display posts\r\n- set up route for displaying a single post\r\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var fetchUserData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(token){var _yield$callApi,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return callApi({url:'/users/me',token:token});case 2:_yield$callApi=_context.sent;data=_yield$callApi.data;return _context.abrupt(\"return\",data);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchUserData(_x){return _ref.apply(this,arguments);};}();var fetchPosts=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(token){var _yield$callApi2,posts;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return callApi({url:'/posts',token:token});case 2:_yield$callApi2=_context2.sent;posts=_yield$callApi2.data.posts;return _context2.abrupt(\"return\",posts);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchPosts(_x2){return _ref2.apply(this,arguments);};}();var App=function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),token=_useState2[0],setToken=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),userData=_useState4[0],setUserData=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),posts=_useState6[0],setPosts=_useState6[1];var isLoggedIn=userData.username!==undefined;var onLogOutClick=function onLogOutClick(){localStorage.removeItem('st-token');setToken('');setUserData({});};useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var fetchedPosts;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(posts.length===0)){_context3.next=5;break;}_context3.next=3;return fetchPosts(token);case 3:fetchedPosts=_context3.sent;setPosts(fetchedPosts);case 5:case\"end\":return _context3.stop();}}},_callee3);})));useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(token){_context4.next=3;break;}setToken(localStorage.getItem('st-token'));return _context4.abrupt(\"return\");case 3:_context4.next=5;return fetchUserData(token);case 5:data=_context4.sent;setUserData(data);case 7:case\"end\":return _context4.stop();}}},_callee4);})),[token]);console.log(\"userData\",userData);console.log(\"isLoggedIn\",isLoggedIn);return/*#__PURE__*/_jsxs(_Fragment,{children:[!isLoggedIn?/*#__PURE__*/_jsxs(\"h1\",{children:[\"Welcome! \",/*#__PURE__*/_jsx(\"br\",{}),\"Please \",/*#__PURE__*/_jsx(\"a\",{href:\"/login\",children:\" sign in\"}),\" or \",/*#__PURE__*/_jsx(\"a\",{href:\"/register\",children:\"create an account\"}),\".\"]}):\"\",/*#__PURE__*/_jsxs(Route,{exact:true,path:\"/\",children:[isLoggedIn?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{id:\"Greeting\",children:[\"Hello, \",userData.username]}),/*#__PURE__*/_jsx(\"button\",{onClick:onLogOutClick,children:\"Log Out\"}),/*#__PURE__*/_jsx(\"button\",{children:/*#__PURE__*/_jsx(Link,{to:\"/CreatePost\",children:\"Create A New Post\"})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{children:/*#__PURE__*/_jsx(Link,{to:\"/register\",children:\"Register\"})}),/*#__PURE__*/_jsx(\"button\",{children:/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Login\"})})]}),/*#__PURE__*/_jsx(\"button\",{children:/*#__PURE__*/_jsx(Link,{to:\"/posts\",children:\"View All Posts\"})}),isLoggedIn?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"My Messages\"}),userData.messages.map(function(message){return message.fromUser._id===userData._id?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Sender: \",message.fromUser.username,\" \"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Message: \",message.content]})]},message._id):null;})]}):null,isLoggedIn?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"My Posts\"}),userData.posts.map(function(post){return/*#__PURE__*/_jsx(Post,{post:post,token:token,posts:posts});})]}):null]}),/*#__PURE__*/_jsxs(Route,{exact:true,path:\"/posts\",children:[/*#__PURE__*/_jsxs(\"button\",{children:[\" \",/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Home\"})]}),/*#__PURE__*/_jsxs(\"button\",{children:[\" \",/*#__PURE__*/_jsx(Link,{to:\"/CreatePost\",children:\"Create New Post\"})]}),isLoggedIn?/*#__PURE__*/_jsx(\"button\",{onClick:onLogOutClick,children:\"Log Out\"}):null,/*#__PURE__*/_jsx(\"h1\",{children:\"Below are all recent posts\"}),/*#__PURE__*/_jsx(Posts,{posts:posts,token:token})]}),/*#__PURE__*/_jsx(Route,{path:\"/posts/:postId\",children:/*#__PURE__*/_jsx(Post,{posts:posts})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",children:/*#__PURE__*/_jsx(Register,{action:\"register\",setToken:setToken})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",children:/*#__PURE__*/_jsx(Register,{action:\"login\",setToken:setToken})}),/*#__PURE__*/_jsx(Route,{path:\"/CreatePost\",children:/*#__PURE__*/_jsx(CreatePost,{action:\"post\",token:token})}),/*#__PURE__*/_jsx(Route,{path:\"/EditPost/:postId\",children:/*#__PURE__*/_jsx(EditPost,{posts:posts,token:token})})]});};export default App;","map":{"version":3,"sources":["C:/Projects/StrangersThings/src/components/App.js"],"names":["React","useEffect","useState","Link","Route","callApi","Register","Post","Posts","CreatePost","EditPost","MessageForm","fetchUserData","token","url","data","fetchPosts","posts","App","setToken","userData","setUserData","setPosts","isLoggedIn","username","undefined","onLogOutClick","localStorage","removeItem","length","fetchedPosts","getItem","console","log","messages","map","message","fromUser","_id","content","post"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { callApi } from '../api';\r\nimport { Register } from './';\r\nimport Post from './Post';\r\nimport Posts from './Posts';\r\nimport CreatePost from './CreatePost';\r\nimport EditPost from './EditPost';\r\nimport MessageForm from './MessageForm';\r\n\r\n/*\r\nRoutes:\r\n/ - home\r\n/register - register\r\n/login - login\r\n/posts - all posts\r\n    /posts/{id} - single post \r\nPlan:\r\n- fetch all posts\r\n- set up route for displaying all posts\r\n- write a component to display posts\r\n- set up route for displaying a single post\r\n*/\r\n\r\nconst fetchUserData = async (token) => {\r\n    const { data } = await callApi({\r\n        url: '/users/me',\r\n        token,\r\n    });\r\n\r\n    return data;\r\n};\r\n\r\nconst fetchPosts = async (token) => {\r\n    const {\r\n        data: { posts },\r\n    } = await callApi({\r\n        url: '/posts',\r\n        token,\r\n    });\r\n\r\n    return posts;\r\n};\r\n\r\nconst App = () => {\r\n    const [token, setToken] = useState('');\r\n    const [userData, setUserData] = useState({});\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const isLoggedIn = userData.username !== undefined;\r\n\r\n    const onLogOutClick = () => {\r\n        localStorage.removeItem('st-token');\r\n        setToken('');\r\n        setUserData({});\r\n    };\r\n\r\n    useEffect(async () => {\r\n        if (posts.length === 0) {\r\n            const fetchedPosts = await fetchPosts(token);\r\n            setPosts(fetchedPosts);\r\n        }\r\n    });\r\n\r\n    useEffect(async () => {\r\n        if (!token) {\r\n            setToken(localStorage.getItem('st-token'));\r\n            return;\r\n        }\r\n        const data = await fetchUserData(token);\r\n        setUserData(data);\r\n    }, [token]);\r\n    console.log(\"userData\", userData)\r\n    console.log(\"isLoggedIn\", isLoggedIn)\r\n\r\n\r\n    return (\r\n        <>\r\n        {!isLoggedIn ?\r\n            <h1>Welcome! <br></br>Please <a href= \"/login\"> sign in</a> or <a href=\"/register\">create an account</a>.</h1>\r\n            : \"\"}\r\n            <Route exact path=\"/\">\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <div id =\"Greeting\">Hello, {userData.username}</div>\r\n                        <button onClick={onLogOutClick}>Log Out</button>\r\n                        <button>\r\n                    <Link to=\"/CreatePost\">Create A New Post</Link>\r\n                        </button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <button>\r\n                            <Link to=\"/register\">Register</Link>\r\n                        </button>\r\n                        <button>\r\n                            <Link to=\"/login\">Login</Link>\r\n                        </button>\r\n                    </>\r\n                )}\r\n                <button>\r\n                    <Link to=\"/posts\">View All Posts</Link>\r\n                </button>\r\n\r\n                \r\n\r\n                {isLoggedIn \r\n                ?\r\n                    <>\r\n                    <h1>My Messages</h1>\r\n                    {userData.messages.map ((message) => {\r\n                        return (\r\n                        message.fromUser._id === userData._id\r\n                        ?    \r\n                        <div key= {message._id}>\r\n                            <div>Sender: {message.fromUser.username} </div>\r\n                            <div>Message: {message.content}</div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                    )})\r\n                        }   \r\n                        </> \r\n                : \r\n                null\r\n                }\r\n                \r\n                \r\n                {isLoggedIn ?\r\n                <>\r\n                <h1>My Posts</h1>\r\n                    {userData.posts.map ((post) => {\r\n                        return (    \r\n                        <Post post = {post}  token = {token} posts={posts}\r\n                         />\r\n                        \r\n                        )\r\n                })\r\n                }   \r\n                </> : null\r\n                }\r\n\r\n                {/* {isLoggedIn ?\r\n                <>\r\n                <h1>My Messages</h1>\r\n                    {userData.messages.map ((message) => {\r\n                        message.fromUser._id === userData._id\r\n                        ?    \r\n                            <div key= {message._id}>\r\n                            <div>Sender: {message.fromUser.username} </div>\r\n                            <div>Message: {message.content}</div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                        })\r\n                }   \r\n                </> : null\r\n                } */}\r\n\r\n\r\n            </Route>\r\n            <Route exact path=\"/posts\">\r\n            <button> <Link to=\"/\">Home</Link></button>\r\n            <button> <Link to=\"/CreatePost\">Create New Post</Link></button>\r\n            {isLoggedIn ? <button onClick={onLogOutClick}>Log Out</button> :null}\r\n            <h1>Below are all recent posts</h1>\r\n                <Posts posts={posts} token={token} />\r\n            </Route>\r\n            <Route path=\"/posts/:postId\">\r\n                <Post posts={posts} />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n                <Register action=\"register\" setToken={setToken} />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n                <Register action=\"login\" setToken={setToken} />\r\n            </Route>\r\n            <Route path=\"/CreatePost\">\r\n                <CreatePost action=\"post\" token={token} />\r\n            </Route>\r\n            <Route path=\"/EditPost/:postId\">\r\n                <EditPost posts={posts} token={token} />\r\n            </Route>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}