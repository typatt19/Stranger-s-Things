{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\StrangersThings\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { callApi } from '../api';\nimport { Register } from './';\nimport Post from './Post';\nimport Posts from './Posts';\nimport CreatePost from './CreatePost';\nimport EditPost from './EditPost';\nimport MessageForm from './MessageForm';\n/*\r\nRoutes:\r\n/ - home\r\n/register - register\r\n/login - login\r\n/posts - all posts\r\n    /posts/{id} - single post \r\nPlan:\r\n- fetch all posts\r\n- set up route for displaying all posts\r\n- write a component to display posts\r\n- set up route for displaying a single post\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fetchUserData = async token => {\n  const {\n    data\n  } = await callApi({\n    url: '/users/me',\n    token\n  });\n  return data;\n};\n\nconst fetchPosts = async token => {\n  const {\n    data: {\n      posts\n    }\n  } = await callApi({\n    url: '/posts',\n    token\n  });\n  return posts;\n};\n\nconsole.log(data);\n\nconst App = () => {\n  _s();\n\n  const [token, setToken] = useState('');\n  const [userData, setUserData] = useState({});\n  const [posts, setPosts] = useState([]);\n  const isLoggedIn = userData.username !== undefined;\n\n  const onLogOutClick = () => {\n    localStorage.removeItem('st-token');\n    setToken('');\n    setUserData({});\n  };\n\n  useEffect(async () => {\n    if (posts.length === 0) {\n      const fetchedPosts = await fetchPosts(token);\n      setPosts(fetchedPosts);\n    }\n  });\n  useEffect(async () => {\n    if (!token) {\n      setToken(localStorage.getItem('st-token'));\n      return;\n    }\n\n    const data = await fetchUserData(token);\n    setUserData(data);\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isLoggedIn ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 26\n      }, this), \"Please \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: \" sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 42\n      }, this), \" or \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        children: \"create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 76\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"Greeting\",\n          children: [\"Hello, \", userData.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogOutClick,\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/CreatePost\",\n          children: \"Create A New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/posts\",\n          children: \"View All Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), userData.posts.map(post => {\n          return /*#__PURE__*/_jsxDEV(Post, {\n            post: post,\n            token: token,\n            posts: posts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true) : null, isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), userData.messages.map(message => {\n          message.fromUser._id === userData._id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Sender: \", message.fromUser.username, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Message: \", message.content]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)]\n          }, message._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this) : null;\n        })]\n      }, void 0, true) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/posts\",\n      children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLogOutClick,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 27\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Below are all recent posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Posts, {\n        posts: posts,\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/posts/:postId\",\n      children: /*#__PURE__*/_jsxDEV(Post, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/register\",\n      children: /*#__PURE__*/_jsxDEV(Register, {\n        action: \"register\",\n        setToken: setToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      children: /*#__PURE__*/_jsxDEV(Register, {\n        action: \"login\",\n        setToken: setToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/CreatePost\",\n      children: /*#__PURE__*/_jsxDEV(CreatePost, {\n        action: \"post\",\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/EditPost/:postId\",\n      children: /*#__PURE__*/_jsxDEV(EditPost, {\n        posts: posts,\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"5p9wtqbWM5P3jFYJRKMC8Mz6TRY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Projects/StrangersThings/src/components/App.js"],"names":["React","useEffect","useState","Link","Route","callApi","Register","Post","Posts","CreatePost","EditPost","MessageForm","fetchUserData","token","data","url","fetchPosts","posts","console","log","App","setToken","userData","setUserData","setPosts","isLoggedIn","username","undefined","onLogOutClick","localStorage","removeItem","length","fetchedPosts","getItem","map","post","messages","message","fromUser","_id","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,QAAT,QAAyB,IAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,aAAa,GAAG,MAAOC,KAAP,IAAiB;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMT,OAAO,CAAC;AAC3BU,IAAAA,GAAG,EAAE,WADsB;AAE3BF,IAAAA;AAF2B,GAAD,CAA9B;AAKA,SAAOC,IAAP;AACH,CAPD;;AASA,MAAME,UAAU,GAAG,MAAOH,KAAP,IAAiB;AAChC,QAAM;AACFC,IAAAA,IAAI,EAAE;AAAEG,MAAAA;AAAF;AADJ,MAEF,MAAMZ,OAAO,CAAC;AACdU,IAAAA,GAAG,EAAE,QADS;AAEdF,IAAAA;AAFc,GAAD,CAFjB;AAOA,SAAOI,KAAP;AACH,CATD;;AAUAC,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AAEA,MAAMM,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,KAAD,EAAQO,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMuB,UAAU,GAAGH,QAAQ,CAACI,QAAT,KAAsBC,SAAzC;;AAEA,QAAMC,aAAa,GAAG,MAAM;AACxBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAT,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAJD;;AAMAtB,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIgB,KAAK,CAACc,MAAN,KAAiB,CAArB,EAAwB;AACpB,YAAMC,YAAY,GAAG,MAAMhB,UAAU,CAACH,KAAD,CAArC;AACAW,MAAAA,QAAQ,CAACQ,YAAD,CAAR;AACH;AACJ,GALQ,CAAT;AAOA/B,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI,CAACY,KAAL,EAAY;AACRQ,MAAAA,QAAQ,CAACQ,YAAY,CAACI,OAAb,CAAqB,UAArB,CAAD,CAAR;AACA;AACH;;AACD,UAAMnB,IAAI,GAAG,MAAMF,aAAa,CAACC,KAAD,CAAhC;AACAU,IAAAA,WAAW,CAACT,IAAD,CAAX;AACH,GAPQ,EAON,CAACD,KAAD,CAPM,CAAT;AASA,sBACI;AAAA,eACC,CAACY,UAAD,gBACG;AAAA,2CAAa;AAAA;AAAA;AAAA;AAAA,cAAb,0BAA6B;AAAG,QAAA,IAAI,EAAE,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA7B,uBAA+D;AAAG,QAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAEK,EAHN,eAII,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA,iBACKA,UAAU,gBACP;AAAA,gCACI;AAAK,UAAA,EAAE,EAAE,UAAT;AAAA,gCAA4BH,QAAQ,CAACI,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBADO,gBAMP;AAAA,gCACI;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,sBAPR,eAgBI;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAmBI;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAnBJ,EAyBKH,UAAU,gBACX;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEKH,QAAQ,CAACL,KAAT,CAAeiB,GAAf,CAAqBC,IAAD,IAAU;AAC3B,8BACA,QAAC,IAAD;AAAM,YAAA,IAAI,EAAIA,IAAd;AAAqB,YAAA,KAAK,EAAItB,KAA9B;AAAqC,YAAA,KAAK,EAAEI;AAA5C;AAAA;AAAA;AAAA;AAAA,kBADA;AAKP,SANI,CAFL;AAAA,sBADW,GAWL,IApCV,EAuCKQ,UAAU,gBACX;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEKH,QAAQ,CAACc,QAAT,CAAkBF,GAAlB,CAAwBG,OAAD,IAAa;AACjCA,UAAAA,OAAO,CAACC,QAAR,CAAiBC,GAAjB,KAAyBjB,QAAQ,CAACiB,GAAlC,gBAEI;AAAA,oCACA;AAAA,qCAAcF,OAAO,CAACC,QAAR,CAAiBZ,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,sCAAeW,OAAO,CAACG,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA,aAAWH,OAAO,CAACE,GAAnB;AAAA;AAAA;AAAA;AAAA,kBAFJ,GAOA,IAPA;AAQC,SATJ,CAFL;AAAA,sBADW,GAcL,IArDV;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eA8DI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAAA,iBACCd,UAAU,gBAAG;AAAQ,QAAA,OAAO,EAAEG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAAqD,IADhE,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEX,KAAd;AAAqB,QAAA,KAAK,EAAEJ;AAA5B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA9DJ,eAmEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,gBAAZ;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEI;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAnEJ,eAsEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,MAAM,EAAC,UAAjB;AAA4B,QAAA,QAAQ,EAAEI;AAAtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAtEJ,eAyEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,MAAM,EAAC,OAAjB;AAAyB,QAAA,QAAQ,EAAEA;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAzEJ,eA4EI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,MAAM,EAAC,MAAnB;AAA0B,QAAA,KAAK,EAAER;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA5EJ,eA+EI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,mBAAZ;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEI,KAAjB;AAAwB,QAAA,KAAK,EAAEJ;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA/EJ;AAAA,kBADJ;AAqFH,CAlHD;;GAAMO,G;;KAAAA,G;AAoHN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { callApi } from '../api';\r\nimport { Register } from './';\r\nimport Post from './Post';\r\nimport Posts from './Posts';\r\nimport CreatePost from './CreatePost';\r\nimport EditPost from './EditPost';\r\nimport MessageForm from './MessageForm';\r\n\r\n/*\r\nRoutes:\r\n/ - home\r\n/register - register\r\n/login - login\r\n/posts - all posts\r\n    /posts/{id} - single post \r\nPlan:\r\n- fetch all posts\r\n- set up route for displaying all posts\r\n- write a component to display posts\r\n- set up route for displaying a single post\r\n*/\r\n\r\nconst fetchUserData = async (token) => {\r\n    const { data } = await callApi({\r\n        url: '/users/me',\r\n        token,\r\n    });\r\n\r\n    return data;\r\n};\r\n\r\nconst fetchPosts = async (token) => {\r\n    const {\r\n        data: { posts },\r\n    } = await callApi({\r\n        url: '/posts',\r\n        token,\r\n    });\r\n\r\n    return posts;\r\n};\r\nconsole.log(data)\r\n\r\nconst App = () => {\r\n    const [token, setToken] = useState('');\r\n    const [userData, setUserData] = useState({});\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const isLoggedIn = userData.username !== undefined;\r\n\r\n    const onLogOutClick = () => {\r\n        localStorage.removeItem('st-token');\r\n        setToken('');\r\n        setUserData({});\r\n    };\r\n\r\n    useEffect(async () => {\r\n        if (posts.length === 0) {\r\n            const fetchedPosts = await fetchPosts(token);\r\n            setPosts(fetchedPosts);\r\n        }\r\n    });\r\n\r\n    useEffect(async () => {\r\n        if (!token) {\r\n            setToken(localStorage.getItem('st-token'));\r\n            return;\r\n        }\r\n        const data = await fetchUserData(token);\r\n        setUserData(data);\r\n    }, [token]);\r\n\r\n    return (\r\n        <>\r\n        {!isLoggedIn ?\r\n            <h1>Welcome! <br></br>Please <a href= \"/login\"> sign in</a> or <a href=\"/register\">create an account</a>.</h1>\r\n            : \"\"}\r\n            <Route exact path=\"/\">\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <div id =\"Greeting\">Hello, {userData.username}</div>\r\n                        <button onClick={onLogOutClick}>Log Out</button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <button>\r\n                            <Link to=\"/register\">Register</Link>\r\n                        </button>\r\n                        <button>\r\n                            <Link to=\"/login\">Login</Link>\r\n                        </button>\r\n                    </>\r\n                )}\r\n                <button>\r\n                    <Link to=\"/CreatePost\">Create A New Post</Link>\r\n                </button>\r\n                <button>\r\n                    <Link to=\"/posts\">View All Posts</Link>\r\n                </button>\r\n\r\n                \r\n\r\n                {isLoggedIn ?\r\n                <>\r\n                <h1>My Posts</h1>\r\n                    {userData.posts.map ((post) => {\r\n                        return (    \r\n                        <Post post = {post}  token = {token} posts={posts}\r\n                         />\r\n                        \r\n                        )\r\n                })\r\n                }   \r\n                </> : null\r\n                }\r\n\r\n                {isLoggedIn ?\r\n                <>\r\n                <h1>My Messages</h1>\r\n                    {userData.messages.map ((message) => {\r\n                        message.fromUser._id === userData._id\r\n                        ?    \r\n                            <div key= {message._id}>\r\n                            <div>Sender: {message.fromUser.username} </div>\r\n                            <div>Message: {message.content}</div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                        })\r\n                }   \r\n                </> : null\r\n                }\r\n\r\n\r\n            </Route>\r\n            <Route exact path=\"/posts\">\r\n            {isLoggedIn ? <button onClick={onLogOutClick}>Log Out</button> :null}\r\n            <h1>Below are all recent posts</h1>\r\n                <Posts posts={posts} token={token} />\r\n            </Route>\r\n            <Route path=\"/posts/:postId\">\r\n                <Post posts={posts} />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n                <Register action=\"register\" setToken={setToken} />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n                <Register action=\"login\" setToken={setToken} />\r\n            </Route>\r\n            <Route path=\"/CreatePost\">\r\n                <CreatePost action=\"post\" token={token} />\r\n            </Route>\r\n            <Route path=\"/EditPost/:postId\">\r\n                <EditPost posts={posts} token={token} />\r\n            </Route>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}