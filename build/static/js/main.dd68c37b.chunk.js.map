{"version":3,"sources":["api/index.js","components/MessageForm.js","components/Post.js","components/Posts.js","components/CreatePost.js","components/EditPost.js","components/App.js","components/Register.js","index.js"],"names":["API_URL","BASE_URL","callApi","a","url","method","token","body","console","log","options","toUpperCase","headers","JSON","stringify","fetch","response","json","data","error","MessageForm","postID","useState","writeMessage","setWriteMessage","SendMessage","event","preventDefault","message","content","onSubmit","type","placeholder","required","value","onChange","target","Post","postToRender","posts","post","postId","useParams","history","useHistory","length","find","_id","onDelete","push","window","location","reload","title","author","username","style","fontSize","description","price","willDeliver","to","isAuthor","messages","map","fromUser","onClick","styles","searchContainer","display","justifyContent","padding","alignItems","searchInput","margin","Posts","searchQuery","updateSearchQuery","postsToDisplay","filter","searchTerm","searchTermLower","toLowerCase","includes","postMatches","border","CreatePost","setTitle","setDescription","setPrice","setLocation","setWillDeliver","handleSubmit","id","EditPost","fetchUserData","fetchPosts","App","setToken","userData","setUserData","setPosts","isLoggedIn","undefined","onLogOutClick","localStorage","removeItem","useEffect","fetchedPosts","getItem","href","exact","path","action","Register","setUsername","password","setPassword","isLogin","oppositeAction","oppositeTitle","user","setItem","alert","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.dd68c37b.chunk.js","sourcesContent":["export const BASE_URL = 'https://strangers-things.herokuapp.com/api/';\r\nexport const COHORT_NAME = '2104-ECE-RM-WEB-PT/';\r\nexport const API_URL = BASE_URL + COHORT_NAME;\r\n\r\nexport const callApi = async ({ url, method, token, body }) => {\r\n    console.log('callApi: ', { url, method, token, body });\r\n\r\n    try {\r\n        const options = {\r\n            method: method ? method.toUpperCase() : 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        if (token) {\r\n            options.headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n\r\n        console.log('request URL: ', API_URL + url);\r\n        const response = await fetch(API_URL + url, options);\r\n        console.log(response)\r\n        const data = await response.json();\r\n        console.log('data: ', data);\r\n\r\n        if (data.error) {\r\n            throw data.error;\r\n        }\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error('ERROR: ', error);\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { callApi } from '../api';\r\n\r\nconst MessageForm = ({token, postID}) => {\r\n    const [writeMessage, setWriteMessage] = useState(\"\");\r\n\r\nconst SendMessage = async (event) => {\r\n    event.preventDefault();\r\n\r\n\r\n    const data = await callApi({\r\n        url: `posts/${postID}/messages`,\r\n        method: 'POST',\r\n        body:{\r\n        message: {content: writeMessage}\r\n        },\r\n        token,\r\n    });\r\n\r\n    \r\n    setWriteMessage(\"\")\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <form onSubmit={SendMessage}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Type Message Here\"\r\n                required\r\n                value={writeMessage}\r\n                onChange={(event) => setWriteMessage(event.target.value)}\r\n            ></input>\r\n            <button \r\n        type=\"submit\">\r\n            Send Message\r\n        </button>\r\n        </form>\r\n        \r\n    </>\r\n);\r\n  };\r\n\r\n\r\n\r\n  export default MessageForm;","import React from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { callApi } from '../api';\r\nimport MessageForm from './MessageForm';\r\n\r\n\r\n\r\n\r\nconst Post = ({posts, post, token}) => {\r\n    const { postId } = useParams();\r\n    const history = useHistory();\r\n\r\n    if (posts.length === 0) return null;\r\n\r\n    let postToRender;\r\n\r\n    if (post) {\r\n        postToRender = post;\r\n    } else {\r\n        postToRender = posts.find((post) => postId === post._id);\r\n    }\r\n\r\n        \r\n        const onDelete = async (event) => {\r\n            event.preventDefault();\r\n    \r\n    \r\n            const data = await callApi({\r\n                url: `/posts/${postToRender._id}`,\r\n                method: 'DELETE',\r\n                token,\r\n            });\r\n        \r\n    \r\n                history.push('/posts');\r\n                window.location.reload()\r\n        }\r\n\r\n        console.log(\"post\", postToRender)\r\n         return (\r\n        \r\n        <>\r\n        \r\n            <h2><u>{postToRender.title}</u></h2>\r\n            {postToRender.author.username\r\n            ? \r\n            <div><b style ={{fontSize:\"23px\"}}>Submitted by:</b> {postToRender.author.username }</div>\r\n            :\r\n            null\r\n            }\r\n            <div><b style ={{fontSize:\"23px\"}}>Description:</b> {postToRender.description}</div>\r\n            <div><b style ={{fontSize:\"23px\"}}>Price:</b> {postToRender.price}</div>\r\n            <div><b style ={{fontSize:\"23px\"}}>Location:</b> {postToRender.location}</div>\r\n            <div><b style ={{fontSize:\"23px\"}}>Delivers:</b> {postToRender.willDeliver ? 'Yes' : 'No'}</div>\r\n            {!post ? <Link to=\"/posts\">Back to all posts</Link> : null}\r\n            {postToRender.isAuthor \r\n            ? \r\n            <>\r\n            {postToRender.messages.map ((message) => {\r\n                return (\r\n                <div>\r\n                    <div><b style ={{fontSize:\"23px\"}}>Sender:</b> {message.fromUser.username} </div>\r\n                    <div><b style ={{fontSize:\"23px\"}}>Message:</b> {message.content}</div>\r\n                </div>\r\n                )\r\n            \r\n            }\r\n\r\n            )\r\n            } \r\n            <button>\r\n            <Link to={\"/EditPost/\" + postToRender._id}>Edit Post</Link>\r\n            </button>\r\n            <button onClick={onDelete}>Delete Post</button> \r\n            </>\r\n            : \r\n            <>\r\n            <MessageForm postID = {postToRender._id} token = {token}/>\r\n            </>\r\n} \r\n  </>       \r\n    );\r\n};\r\n\r\n\r\nexport default Post;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Post from './Post';\r\n\r\nconst styles = {\r\n    searchContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: '16px',\r\n        alignItems: 'center',\r\n    },\r\n    searchInput: {\r\n        margin: '0 16px',\r\n    },\r\n};\r\n\r\nconst postMatches = (post, searchTerm) => {\r\n    const searchTermLower = searchTerm.toLowerCase();\r\n\r\n    const {\r\n        description,\r\n        location,\r\n        title,\r\n        author: { username },\r\n        price,\r\n    } = post;\r\n\r\n    const toMatch = [description, location, title, username, price];\r\n    for (const field of toMatch) {\r\n        if (field.toLowerCase().includes(searchTermLower)) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nconst Posts = ({ posts }) => {\r\n    const [searchQuery, updateSearchQuery] = useState('');\r\n\r\n    const postsToDisplay =\r\n        searchQuery.length > 0\r\n            ? posts.filter((post) => postMatches(post, searchQuery))\r\n            : posts;\r\n\r\n    return (\r\n        <>\r\n        <b style ={{fontSize:\"28px\"}}><h2>Posts</h2></b>\r\n            <div style={styles.searchContainer}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search Post\"\r\n                    style={styles.searchInput}\r\n                    value={searchQuery}\r\n                    onChange={(event) => {\r\n                        updateSearchQuery(event.target.value);\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            {postsToDisplay.map((post) => (\r\n                <div key={post._id} style={{ border: '1px solid black' }}>\r\n                    <Post posts={posts} post={post} />\r\n                    <button>\r\n                        <Link to={`/posts/${post._id}`}>View Post</Link>\r\n                    </button>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Posts;","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { callApi } from '../api';\r\n\r\n\r\nconst CreatePost = ({token}) => {\r\n    const history = useHistory();\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [location, setLocation] = useState('On Request');\r\n    const [willDeliver, setWillDeliver] = useState(false);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n\r\n        const data = await callApi({\r\n            url: `/posts`,\r\n            method: 'POST',\r\n            body:{\r\n                post: {\r\n                  title: title,\r\n                  description: description,\r\n                  price: price,\r\n                  location: location,\r\n                  willDeliver: willDeliver,\r\n                }\r\n            }, \r\n              token\r\n        });\r\n    \r\n\r\n            history.push('/posts');\r\n            window.location.reload()\r\n        console.log(data)\r\n    };\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h2>Create New Post</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div id =\"TextField\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    value={title}\r\n                    onChange={(event) => setTitle(event.target.value)}\r\n                ></input>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Description\"\r\n                    value={description}\r\n                    onChange={(event) => setDescription(event.target.value)}\r\n                ></input>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Price\"\r\n                    value={price}\r\n                    onChange={(event) => setPrice(event.target.value)}\r\n                ></input>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Location\"\r\n                    value={location}\r\n                    onChange={(event) => setLocation(event.target.value)}\r\n                ></input>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    value={willDeliver}\r\n                    onChange={(event) => setWillDeliver(event.target.value)}\r\n                ></input>\r\n                </div>\r\n                <button type=\"submit\">Post!</button>\r\n            </form>\r\n            <button>\r\n                <Link to=\"/\">Home</Link>\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default CreatePost;","import React, { useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { callApi } from '../api';\r\n\r\n\r\nconst EditPost = ({token, posts}) => {\r\n    const history = useHistory();\r\n    const {postId} = useParams();\r\n    if (posts.length === 0) return null;\r\n\r\n    let postToRender = posts.find((post) => postId === post._id);\r\n    console.log(\"EditPosts\", posts)\r\n    console.log(\"EditPosts\", postId)\r\n\r\n\r\n\r\n    const [title, setTitle] = useState(postToRender.title);\r\n    const [description, setDescription] = useState(postToRender.description);\r\n    const [price, setPrice] = useState(postToRender.price);\r\n    const [location, setLocation] = useState(postToRender.location);\r\n    const [willDeliver, setWillDeliver] = useState(postToRender.willDeliver);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n\r\n        const data = await callApi({\r\n            url: `/posts/${postToRender._id}`,\r\n            method: 'PATCH',\r\n            body:{\r\n                post: {\r\n                  title: title,\r\n                  description: description,\r\n                  price: price,\r\n                  location: location,\r\n                  willDeliver: willDeliver,\r\n                }\r\n            }, \r\n              token\r\n        });\r\n    \r\n\r\n            history.push('/posts');\r\n            window.location.reload()\r\n        console.log(data)\r\n    };\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <h2>Edit Post</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div id =\"TextField\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    value={title}\r\n                    onChange={(event) => setTitle(event.target.value)}\r\n                ></input>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Description\"\r\n                    value={description}\r\n                    onChange={(event) => setDescription(event.target.value)}\r\n                ></input>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Price\"\r\n                    value={price}\r\n                    onChange={(event) => setPrice(event.target.value)}\r\n                ></input>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Location\"\r\n                    value={location}\r\n                    onChange={(event) => setLocation(event.target.value)}\r\n                ></input>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    value={willDeliver}\r\n                    onChange={(event) => setWillDeliver(event.target.value)}\r\n                ></input>\r\n                </div>\r\n                <button type=\"submit\">Sumbit Edit</button>\r\n            </form>\r\n            <button>\r\n                <Link to=\"/\">Home</Link>\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditPost;","import React, { useEffect, useState } from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { callApi } from '../api';\r\nimport { Register } from './';\r\nimport Post from './Post';\r\nimport Posts from './Posts';\r\nimport CreatePost from './CreatePost';\r\nimport EditPost from './EditPost';\r\nimport MessageForm from './MessageForm';\r\n\r\n/*\r\nRoutes:\r\n/ - home\r\n/register - register\r\n/login - login\r\n/posts - all posts\r\n    /posts/{id} - single post \r\nPlan:\r\n- fetch all posts\r\n- set up route for displaying all posts\r\n- write a component to display posts\r\n- set up route for displaying a single post\r\n*/\r\n\r\nconst fetchUserData = async (token) => {\r\n    const { data } = await callApi({\r\n        url: '/users/me',\r\n        token,\r\n    });\r\n\r\n    return data;\r\n};\r\n\r\nconst fetchPosts = async (token) => {\r\n    const {\r\n        data: { posts },\r\n    } = await callApi({\r\n        url: '/posts',\r\n        token,\r\n    });\r\n\r\n    return posts;\r\n};\r\n\r\nconst App = () => {\r\n    const [token, setToken] = useState('');\r\n    const [userData, setUserData] = useState({});\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const isLoggedIn = userData.username !== undefined;\r\n\r\n    const onLogOutClick = () => {\r\n        localStorage.removeItem('st-token');\r\n        setToken('');\r\n        setUserData({});\r\n    };\r\n\r\n    useEffect(async () => {\r\n        if (posts.length === 0) {\r\n            const fetchedPosts = await fetchPosts(token);\r\n            setPosts(fetchedPosts);\r\n        }\r\n    });\r\n\r\n    useEffect(async () => {\r\n        if (!token) {\r\n            setToken(localStorage.getItem('st-token'));\r\n            return;\r\n        }\r\n        const data = await fetchUserData(token);\r\n        setUserData(data);\r\n    }, [token]);\r\n    console.log(\"userData\", userData)\r\n    console.log(\"isLoggedIn\", isLoggedIn)\r\n\r\n\r\n    return (\r\n        <>\r\n        {!isLoggedIn ?\r\n            <h1>Welcome! <br></br>Please <a href= \"/login\"> sign in</a> or <a href=\"/register\">create an account</a>.</h1>\r\n            : \"\"}\r\n            <Route exact path=\"/\">\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <div id =\"Greeting\">Hello, {userData.username}</div>\r\n                        <button onClick={onLogOutClick}>Log Out</button>\r\n                        <button>\r\n                    <Link to=\"/CreatePost\">Create A New Post</Link>\r\n                        </button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <button>\r\n                            <Link to=\"/register\">Register</Link>\r\n                        </button>\r\n                        <button>\r\n                            <Link to=\"/login\">Login</Link>\r\n                        </button>\r\n                    </>\r\n                )}\r\n                <button>\r\n                    <Link to=\"/posts\">View All Posts</Link>\r\n                </button>\r\n\r\n                \r\n\r\n                {isLoggedIn \r\n                ?\r\n                    <>\r\n                    <h1>My Messages</h1>\r\n                    {userData.messages.map ((message) => {\r\n                        return (\r\n                        message.fromUser._id === userData._id\r\n                        ?    \r\n                        <div key= {message._id}>\r\n                            <div>Sender: {message.fromUser.username} </div>\r\n                            <div>Message: {message.content}</div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                    )})\r\n                        }   \r\n                        </> \r\n                : \r\n                null\r\n                }\r\n                \r\n                \r\n                {isLoggedIn ?\r\n                <>\r\n                <h1>My Posts</h1>\r\n                    {userData.posts.map ((post) => {\r\n                        return (    \r\n                        <Post post = {post}  token = {token} posts={posts}\r\n                         />\r\n                        \r\n                        )\r\n                })\r\n                }   \r\n                </> : null\r\n                }\r\n\r\n                {/* {isLoggedIn ?\r\n                <>\r\n                <h1>My Messages</h1>\r\n                    {userData.messages.map ((message) => {\r\n                        message.fromUser._id === userData._id\r\n                        ?    \r\n                            <div key= {message._id}>\r\n                            <div>Sender: {message.fromUser.username} </div>\r\n                            <div>Message: {message.content}</div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                        })\r\n                }   \r\n                </> : null\r\n                } */}\r\n\r\n\r\n            </Route>\r\n            <Route exact path=\"/posts\">\r\n            <button> <Link to=\"/\">Home</Link></button>\r\n            <button> <Link to=\"/CreatePost\">Create New Post</Link></button>\r\n            {isLoggedIn ? <button onClick={onLogOutClick}>Log Out</button> :null}\r\n            <h1>Below are all recent posts</h1>\r\n                <Posts posts={posts} token={token} />\r\n            </Route>\r\n            <Route path=\"/posts/:postId\">\r\n                <Post posts={posts} />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n                <Register action=\"register\" setToken={setToken} />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n                <Register action=\"login\" setToken={setToken} />\r\n            </Route>\r\n            <Route path=\"/CreatePost\">\r\n                <CreatePost action=\"post\" token={token} />\r\n            </Route>\r\n            <Route path=\"/EditPost/:postId\">\r\n                <EditPost posts={posts} token={token} />\r\n            </Route>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default App\r\n","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { callApi } from '../api';\r\n\r\nconst Register = ({ setToken, action }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const isLogin = action === 'login';\r\n    const title = isLogin ? 'Login' : 'Register';\r\n    const oppositeAction = isLogin ? 'register' : 'login';\r\n    const oppositeTitle = isLogin ? 'Register' : 'Login';\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const data = await callApi({\r\n            url: `users/${action}`,\r\n            body: { user: { username, password } },\r\n            method: 'POST',\r\n        });\r\n\r\n\r\n        let token\r\n\r\n        try { \r\n           token = data.data.token\r\n           if (token) {\r\n               localStorage.setItem( 'st-token', token );\r\n               setToken(token);\r\n               history.push('/');\r\n               return token\r\n           } \r\n       } catch (error) {\r\n           window.alert(\"Wrong Username or Password!\")\r\n       }\r\n   \r\n        \r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>{title}</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"username\"\r\n                    required\r\n                    value={username}\r\n                    onChange={(event) => setUsername(event.target.value)}\r\n                ></input>\r\n                <div id =\"TextField\">\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                ></input>\r\n                <button type=\"submit\">{title}</button>\r\n                </div>\r\n            </form>\r\n            <button>\r\n                <Link to={`/${oppositeAction}`}>{oppositeTitle}</Link>\r\n            </button>\r\n            <button>\r\n                <Link to=\"/\">Home</Link>\r\n            </button>\r\n            \r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Register;","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { App } from './components';\r\n\r\n ReactDOM.render(\r\n   <Router>\r\n      <App />   \r\n   </ Router>,\r\n  document.querySelector(\"#app\")\r\n)\r\n"],"sourceRoot":""}